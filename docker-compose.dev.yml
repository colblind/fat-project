services:
  app:
    container_name: app
    environment:
      DB_HOST: postgres
    env_file:
      - .env.dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "16000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: scripts/ poetry.lock pyproject.toml poetry.toml .env
        - action: sync
          path: ./src
          target: /src
    volumes:
      - ./alembic/:/src/alembic/

  postgres:
    hostname: postgres

    image: postgres:14.1
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - pg_data_backups:/backups
    ports:
      - "65432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: no

volumes:
  pg_data:
    driver: "local"
  pg_data_backups:
    driver: "local"
